{"version":3,"sources":["assets/Loading/chemical-loading-gif.gif","assets/Sidenav/sw-logo-white.svg","assets/Sidenav/icon-campaign.svg","assets/Sidenav/icon-reports.svg","assets/Sidenav/icon-teams.svg","assets/Sidenav/icon-leads.svg","assets/Sidenav/menu-help.svg","assets/Navbar/caret-down.svg","assets/Navbar/icon-mail.svg","assets/Header/logoTeamsGrey.svg","assets/Header/logoAdd.svg","assets/Header/icon-search.svg","assets/Content/star-default.svg","assets/Content/icon-conversations-small.svg","assets/Content/icon-leads-small.svg","components/Loading/Loading.js","components/Sidenav/Sidetile.js","components/Sidenav/Sidenav.js","components/Navbar/Settings.js","components/Navbar/Navbar.js","components/Header/HeaderTop.js","components/Header/HeaderTab.js","components/Header/HeaderBot.js","components/Header/Header.js","components/Content/TeamCard.js","components/Content/Content.js","components/ActivityFeed/Activity.js","components/ActivityFeed/ActivityFeed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","src","LoadingGIF","alt","className","Component","Sidetile","logoSrc","this","props","name","style","Sidenav","sideLogos","id","image","logoCampaign","logoReports","logoTeams","logoLeads","menuHelp","logoSW","map","logo","key","Settings","userName","user","avatarSrc","avatar","notifCount","notifications_count","caret","iconMail","Navbar","HeaderTop","logoTeamsGrey","logoAdd","HeaderTab","method","onClick","HeaderBot","AllStyle","FavStyle","ArcStyle","headerTabs","changeTabAll","changeTabFav","changeTabArc","tab","logoSearch","type","placeholder","Header","TeamCard","time","teamDetails","unknownTime","created_at","starDefault","description","iconConv","campaigns_count","iconLeads","leads_count","Content","teams","selection","select","length","team","Activity","activity","target","activityDetails","person","decryptActivity","action","ActivityFeed","activities","App","fetchData","setState","loading","axios","get","then","res","AllTeams","data","FavoriteTeams","filter","is_favorited","ArchivedTeams","is_archived","currentUser","current_user","catch","err","console","log","state","bind","currentSelect","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.66775981.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chemical-loading-gif.13edb3cc.gif\";","module.exports = __webpack_public_path__ + \"static/media/sw-logo-white.6a5c384b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-campaign.62c57ded.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-reports.9ab34b7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-teams.6301f1b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-leads.a8561513.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-help.18c768c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret-down.a545f7c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mail.f3cfd0cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoTeamsGrey.c8a86363.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoAdd.4d5cf6a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-search.7d19281b.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-default.7287f446.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-conversations-small.b825e8cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-leads-small.175c11b8.svg\";","import React, { Component } from \"react\";\nimport \"./loading.css\";\nimport LoadingGIF from \"../../assets/Loading/chemical-loading-gif.gif\";\n\nclass Loading extends Component {\n  render() {\n    return <img src={LoadingGIF} alt=\"Loading\" className=\"loading\" />;\n  }\n}\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport \"./sidetile.css\";\n\nclass Sidetile extends Component {\n  render() {\n    let logoSrc = this.props.logoSrc;\n    let name = this.props.name;\n    let style = this.props.style;\n\n    return (\n      <div className={style}>\n        <img src={logoSrc} alt={name} className=\"sidetile-logo\" />\n      </div>\n    );\n  }\n}\n\nexport default Sidetile;\n","import React, { Component } from \"react\";\nimport \"./sidenav.css\";\nimport Sidetile from \"./Sidetile\";\n//logos\nimport logoSW from \"../../assets/Sidenav/sw-logo-white.svg\";\nimport logoCampaign from \"../../assets/Sidenav/icon-campaign.svg\";\nimport logoReports from \"../../assets/Sidenav/icon-reports.svg\";\nimport logoTeams from \"../../assets/Sidenav/icon-teams.svg\";\nimport logoLeads from \"../../assets/Sidenav/icon-leads.svg\";\nimport menuHelp from \"../../assets/Sidenav/menu-help.svg\";\n\nclass Sidenav extends Component {\n  render() {\n    let sideLogos = [\n      { id: 1, name: \"Campaigns\", image: logoCampaign, style: \"sidetile\" },\n      { id: 2, name: \"Reports\", image: logoReports, style: \"sidetile\" },\n      { id: 3, name: \"Teams\", image: logoTeams, style: \"sidetile sidetile-current\" },\n      { id: 4, name: \"Leads\", image: logoLeads, style: \"sidetile\" },\n      { id: 5, name: \"Help\", image: menuHelp, style: \"sidetile\" }\n    ];\n    return (\n      <div className=\"sidenav\">\n        <div className=\"sidenav-swlogo\">\n          <img src={logoSW} alt=\"sw-logo-white\" />\n        </div>\n        {sideLogos.map(logo => {\n          return (\n            <Sidetile\n              logoSrc={logo.image}\n              key={logo.id}\n              name={logo.name}\n              style={logo.style}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Sidenav;\n","import React, { Component } from \"react\";\nimport \"./settings.css\";\nimport caret from \"../../assets/Navbar/caret-down.svg\";\nimport iconMail from \"../../assets/Navbar/icon-mail.svg\";\n\nclass Settings extends Component {\n  render() {\n    let userName = this.props.user.name;\n    let avatarSrc = this.props.user.avatar;\n    let notifCount = this.props.user.notifications_count;\n    return (\n      <div className=\"navbar-settings\">\n        <img src={caret} className=\"navbar-settings-caret\" alt=\"caret-down\" />\n        <img src={avatarSrc} className=\"navbar-settings-dp\" alt=\"navbar-dp\" />\n        <span className=\"navbar-settings-greetings\"> Hello, {userName} </span>\n        <span className=\"navbar-settings-mail\">\n          <img\n            src={iconMail}\n            className=\"navbar-settings-mail-logo\"\n            alt=\"icon-mail\"\n          />\n          <span className=\"navbar-settings-mail-badge\">\n            <span className=\"navbar-settings-mail-badge-count\">\n              {notifCount}\n            </span>\n          </span>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from \"react\";\nimport \"./navbar.css\";\nimport Settings from \"./Settings\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar\">\n        <span className=\"navbar-app-name\">NARWHAL</span>\n        <span className=\"navbar-breadcrumbs\">Teams</span>\n        <Settings user={this.props.user}/>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n//styles\nimport \"./headertop.css\"\n//logos\nimport logoTeamsGrey from \"../../assets/Header/logoTeamsGrey.svg\";\nimport logoAdd from \"../../assets/Header/logoAdd.svg\";\n\nclass HeaderTop extends Component {\n  render() {\n    return (\n      <div className=\"header-top\">\n        <img\n          src={logoTeamsGrey}\n          className=\"header-top-icon\"\n          alt=\"logo-teams-grey\"\n        />\n        <span className=\"header-top-title\">Teams</span>\n        <button className=\"header-top-button\">\n          <img\n            className=\"header-top-button-icon\"\n            src={logoAdd}\n            alt=\"logo-create-new-team\"\n          />\n          <span className=\"header-top-button-text\">CREATE NEW TEAM</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default HeaderTop;\n","import React, { Component } from \"react\";\n//styles\nimport \"./headertab.css\";\n\nclass HeaderTab extends Component {\n  render() {\n    let style = this.props.style;\n    let method = this.props.method;\n    let name = this.props.name;\n    return (\n      <div className={style} onClick={method}>\n        {\" \"}\n        <span className={style + \"-text\"}>{name}</span>\n      </div>\n    );\n  }\n}\n\nexport default HeaderTab;\n","import React, { Component } from \"react\";\nimport HeaderTab from \"./HeaderTab\";\n//styles\nimport \"./headerbot.css\";\n//logos\nimport logoSearch from \"../../assets/Header/icon-search.svg\";\n\nclass HeaderBot extends Component {\n  render() {\n    let AllStyle = this.props.AllStyle;\n    let FavStyle = this.props.FavStyle;\n    let ArcStyle = this.props.ArcStyle;\n    let headerTabs = [\n      { id: 1, name: \"All\", style: AllStyle, method: this.props.changeTabAll },\n      {\n        id: 2,\n        name: \"Favorites\",\n        style: FavStyle,\n        method: this.props.changeTabFav\n      },\n      {\n        id: 3,\n        name: \"Archived\",\n        style: ArcStyle,\n        method: this.props.changeTabArc\n      }\n    ];\n\n    return (\n      <div className=\"header-bot\">\n        {headerTabs.map(tab => {\n          return (\n            <HeaderTab\n              style={tab.style}\n              method={tab.method}\n              key={tab.id}\n              name={tab.name}\n            />\n          );\n        })}\n        <img\n          src={logoSearch}\n          alt=\"search-logo\"\n          className=\"header-bot-search-logo\"\n        />\n        <input type=\"text\" placeholder=\"Search team name ...\" />\n      </div>\n    );\n  }\n}\n\nexport default HeaderBot;\n","import React, { Component } from \"react\";\nimport HeaderTop from \"./HeaderTop\";\nimport HeaderBot from \"./HeaderBot\";\n//styles\nimport \"./header.css\";\n\nclass Header extends Component {\n  render() {\n    let AllStyle = this.props.AllStyle;\n    let FavStyle = this.props.FavStyle;\n    let ArcStyle = this.props.ArcStyle;\n    return (\n      <div className=\"header\">\n        <HeaderTop />\n        <HeaderBot\n          AllStyle={AllStyle}\n          FavStyle={FavStyle}\n          ArcStyle={ArcStyle}\n          changeTabAll={this.props.changeTabAll}\n          changeTabFav={this.props.changeTabFav}\n          changeTabArc={this.props.changeTabArc}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n//styles\nimport \"./teamcard.css\";\n//logos\nimport starDefault from \"../../assets/Content/star-default.svg\";\nimport iconConv from \"../../assets/Content/icon-conversations-small.svg\";\nimport iconLeads from \"../../assets/Content/icon-leads-small.svg\";\n\nclass TeamCard extends Component {\n  unknownTime(time) {\n    if (time) {\n      return <span className=\"content-card-date\">Created {time}</span>;\n    } else {\n      return (\n        <span className=\"content-card-date\">Created date unspecified</span>\n      );\n    }\n  }\n\n  render() {\n    let teamDetails = this.props.teamDetails;\n    return (\n      <div className=\"content-card\">\n        <span className=\"content-card-top\">\n          <img\n            className=\"content-card-logo\"\n            alt=\"content-card-logo\"\n            src={teamDetails.image}\n          ></img>\n          <span className=\"content-card-title\">{teamDetails.name}</span>\n          {this.unknownTime(teamDetails.created_at)}\n          <img\n            className=\"content-card-star\"\n            alt=\"content-card-logo\"\n            src={starDefault}\n          ></img>\n          <span className=\"content-card-text\">{teamDetails.description}</span>\n        </span>\n        <span className=\"content-card-bot\">\n          <img\n            className=\"content-card-campaign-icon\"\n            alt=\"content-card-campaign-icon\"\n            src={iconConv}\n          ></img>\n          <span className=\"content-card-campaign-text\">\n            {teamDetails.campaigns_count} Campaigns\n          </span>\n          <img\n            className=\"content-card-leads-icon\"\n            alt=\"content-card-leads-icon\"\n            src={iconLeads}\n          ></img>\n          <span className=\"content-card-leads-text\">\n            {teamDetails.leads_count} Leads\n          </span>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default TeamCard;\n","import React, { Component } from \"react\";\nimport \"./content.css\";\nimport TeamCard from \"./TeamCard\";\n\nexport class Content extends Component {\n\n  render() {\n    let teams = this.props.teams;\n    let selection = this.props.select;\n    return (\n      <div className=\"content\">\n        <div className=\"content-top\">\n          <span className=\"content-title\">{selection} Teams</span>\n          <span className=\"content-count\">Showing {teams.length} of {teams.length} teams</span>\n        </div>\n        <div className=\"content-bot\">\n          {teams.map(team => {\n            return <TeamCard teamDetails={team} key={team.id} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from \"react\";\n//styles\nimport \"./activity.css\";\n\nclass Activity extends Component {\n  decryptActivity(name, activity, target) {\n    switch (activity) {\n      case \"increased_quota\":\n        return (\n          <span className=\"activity-caption\">\n            <b>{name}</b> increased <b>{target}</b>'s quota.\n          </span>\n        );\n      case \"added_leads\":\n        return (\n          <span className=\"activity-caption\">\n            <b>{name}</b> added new leads to <b>{target}</b>.\n          </span>\n        );\n      case \"archived_team\":\n        return (\n          <span className=\"activity-caption\">\n            <b>{name}</b> archived the team <b>{target}</b>.\n          </span>\n        );\n      default:\n        return <span>Unknown Activity - Check API</span>;\n    }\n  }\n\n  unknownTime(time) {\n    if (time) {\n      return <span className=\"activity-time\"> {time}</span>;\n    } else {\n      return <span className=\"activity-time\">Unknown Time</span>;\n    }\n  }\n\n  render() {\n    let activityDetails = this.props.activityDetails;\n    return (\n      <div className=\"activity\">\n        <div className=\"activity-top\">\n          <img\n            src={activityDetails.person.avatar}\n            alt=\"activity-avatar\"\n            className=\"activity-avatar\"\n          />\n          {this.decryptActivity(\n            activityDetails.person.name,\n            activityDetails.action,\n            activityDetails.target\n          )}\n        </div>\n        <div className=\"activity-bottom\">\n          {this.unknownTime(activityDetails.created_at)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Activity;\n","import React, { Component } from \"react\";\nimport Activity from \"./Activity\"\n//styles\nimport \"./activityfeed.css\";\n\nclass ActivityFeed extends Component {\n  render() {\n    let activities = this.props.activities;\n    return (\n      <div className=\"activity-feed\">\n        <div className=\"activity-feed-top\">\n          <div className=\"activity-feed-title\">Activity</div>\n        </div>\n        <div className=\"activity-feed-bot\">\n        {activities.map(activity => {\n            return <Activity activityDetails={activity} key={activity.id} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ActivityFeed;\n","import React, { Component } from \"react\";\n// dependencies\nimport axios from \"axios\";\n// styles\nimport \"./App.css\";\n// components\nimport Loading from \"./components/Loading/Loading\";\nimport Sidenav from \"./components/Sidenav/Sidenav\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Header from \"./components/Header/Header\";\nimport Content from \"./components/Content/Content\";\nimport ActivityFeed from \"./components/ActivityFeed/ActivityFeed\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      select: \"All\",\n      activities: [],\n      currentUser: {},\n      AllTeams: [],\n      FavoriteTeams: [],\n      ArchivedTeams: [],\n      AllStyle: \"header-tab-current\",\n      FavStyle: \"header-tab\",\n      ArcStyle: \"header-tab\"\n    };\n    this.changeTabAll = this.changeTabAll.bind(this);\n    this.changeTabFav = this.changeTabFav.bind(this);\n    this.changeTabArc = this.changeTabArc.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  // fetch data from JSON-Server API & filter data\n  fetchData = () => {\n    this.setState({ loading: true });\n    axios\n      .get(\"https://sw-test-api.herokuapp.com/db\")\n      .then(res => {\n        this.setState({\n          loading: false,\n          AllTeams: res.data.teams,\n          FavoriteTeams: res.data.teams.filter(teams => teams.is_favorited),\n          ArchivedTeams: res.data.teams.filter(teams => teams.is_archived),\n          activities: res.data.activities,\n          currentUser: res.data.current_user\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //tab methods to set state and render content\n  changeTabAll() {\n    this.setState({\n      AllStyle: \"header-tab-current\",\n      FavStyle: \"header-tab\",\n      ArcStyle: \"header-tab\",\n      select: \"All\"\n    });\n  }\n\n  changeTabFav() {\n    this.setState({\n      AllStyle: \"header-tab\",\n      FavStyle: \"header-tab-current\",\n      ArcStyle: \"header-tab\",\n      select: \"Favorite\"\n    });\n  }\n\n  changeTabArc() {\n    this.setState({\n      AllStyle: \"header-tab\",\n      FavStyle: \"header-tab\",\n      ArcStyle: \"header-tab-current\",\n      select: \"Archived\"\n    });\n  }\n\n  render() {\n    let currentSelect = this.state.select + \"Teams\";\n    return (\n      <div className=\"app\">\n        <Sidenav />\n        {this.state.loading === true ? (\n          <div className=\"app-loading\">\n          <Loading />\n          </div>\n        ) : (\n          <div className=\"app-main\">\n            <Navbar user={this.state.currentUser} />\n            <Header\n              select={this.state.select}\n              AllStyle={this.state.AllStyle}\n              FavStyle={this.state.FavStyle}\n              ArcStyle={this.state.ArcStyle}\n              changeTabAll={this.changeTabAll}\n              changeTabFav={this.changeTabFav}\n              changeTabArc={this.changeTabArc}\n            />\n            <div className=\"app-body\">\n            <Content\n              teams={this.state[currentSelect]}\n              select={this.state.select}\n            />\n            <ActivityFeed activities={this.state.activities} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}